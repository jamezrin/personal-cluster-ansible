---
- name: Prepare nodes
  gather_facts: true
  hosts: cluster
  become: true
  tags:
    - all
    - prepare
  tasks:
    - import_tasks: tasks/ensure_packages.yml

- name: Update k3s server nodes
  hosts: servers
  gather_facts: false
  serial: 1
  become: true
  tags:
    - all
    - update
    - update-servers
  vars:
    unit_name: k3s
    reboot_desired: false
  tasks:
    - name: Update system packages
      import_tasks: tasks/update_system.yml

    - name: Obtain install script
      include_tasks: tasks/obtain_install_script.yml

    - name: Get node public IP
      register: public_ip_lookup
      ansible.builtin.command: dig +short -4 myip.opendns.com @resolver1.opendns.com

    - name: Execute k3s install script
      vars:
        default_if_ipv4: '{{ ansible_facts[default_if_name].ipv4.address }}'
        public_inet_ipv4: '{{ public_ip_lookup.stdout }}'
        write_kubeconfig_mode: '0644'
      ansible.builtin.command:
        argv:
          - '{{ install_script.path }}'
          - server
          - --flannel-iface={{ default_if_name }}
          - --node-external-ip={{ public_inet_ipv4 }}
          - --node-ip={{ default_if_ipv4 }}
          - --advertise-address={{ default_if_ipv4 }}
          - --write-kubeconfig-mode={{ write_kubeconfig_mode }}

    - name: Post k3s update steps
      include_tasks: tasks/post_k3s_update.yml
      vars:
        node_drain_delegate_host: '{{ inventory_hostname }}'

- name: Update k3s agent nodes
  hosts: agents
  gather_facts: false
  serial: 1
  become: true
  vars:
    unit_name: k3s-agent
    reboot_desired: false
    first_server_node_name: '{{ groups.servers | first }}'
  tags:
    - all
    - update
    - update-agents
  tasks:
    - name: Update system packages
      import_tasks: tasks/update_system.yml

    - name: Obtain install script
      include_tasks: tasks/obtain_install_script.yml

    - name: Get node public IP
      register: public_ip_lookup
      ansible.builtin.command: dig +short -4 myip.opendns.com @resolver1.opendns.com

    - name: Read first server token
      ansible.builtin.slurp:
        src: /var/lib/rancher/k3s/server/token
      delegate_to: '{{ first_server_node_name }}'
      delegate_facts: false
      register: first_server_token_slurp

    - name: Execute k3s install script
      vars:
        default_if_ipv4: '{{ ansible_facts[default_if_name].ipv4.address }}'
        public_inet_ipv4: '{{ public_ip_lookup.stdout }}'

        first_server_default_if_name: '{{ hostvars[first_server_node_name].default_if_name }}'
        first_server_server_ip: '{{ hostvars[first_server_node_name].ansible_facts[first_server_default_if_name].ipv4.address }}'
        first_server_token: "{{ first_server_token_slurp['content'] | b64decode | trim }}"
      ansible.builtin.command:
        argv:
          - '{{ install_script.path }}'
          - agent
          - --server=https://{{ first_server_server_ip }}:6443
          - --token={{ first_server_token | quote }}
          - --flannel-iface={{ default_if_name }}
          - --node-external-ip={{ public_inet_ipv4 }}
          - --node-ip={{ default_if_ipv4 }}

    - name: Post k3s update steps
      include_tasks: tasks/post_k3s_update.yml
      vars:
        node_drain_delegate_host: '{{ first_server_node_name }}'
